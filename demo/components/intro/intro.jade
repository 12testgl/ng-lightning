mixin prism(html) 
  pre.language-bash
    code.language-bash(ngNonBindable)!= html

#banner(style="background: #111111; color: #ccc; tex-align: center;")
  .slds-container--large.slds-container--center
    .slds-grid.slds-grid--align-center.slds-p-around--large
      .slds-col.slds-text-align--center
        img(src="img/shield.svg", style="height: 170px;")
        .slds-text-heading--large(style="color:#FFF;") NG-LIGHTNING
        .slds-text-heading--small.slds-p-top--small Native Angular 2 components & directives for Lightning Design System

.slds-container--large.slds-container--center.slds-m-top--small.slds-p-around--x-large

  .slds-grid.slds-wrap
    .slds-col--padded.slds-text-align--center.slds-size--1-of-1.slds-large-size--1-of-3.slds-m-top--medium
      .slds-text-heading--medium BUILDING FOR THE FUTURE
      .slds-m-top--small 
        | Built upon next generation frameworks like 
        b: a(href="https://angular.io/") Angular 2 
        | and 
        b: a(href="https://www.lightningdesignsystem.com/") Salesforce's Lightning Design System
        | , rest â€‹assured that you building an application to stand the test of time.
    .slds-col--padded.slds-text-align--center.slds-size--1-of-1.slds-large-size--1-of-3.slds-m-top--medium
      .slds-text-heading--medium BEST PRACTICES
      .slds-m-top--small 
        | We focus on building stateless functional components that depend only on their input properties, guaranteeing better performance, more development flexibility and seamless integration with your application's requirements.
    .slds-col--padded.slds-text-align--center.slds-size--1-of-1.slds-large-size--1-of-3.slds-m-top--medium
      .slds-text-heading--medium  ACCESSIBILITY
      .slds-m-top--small 
        | We put a lot of effort to follow Lightning Design System's accessibility guidelines, to assure that your product is operable by people with a wide range of abilities
        | and meets all legal requirements.

  hr

  .slds-p-vertical--large
    .slds-text-heading--large.slds-m-bottom--large Getting started
    p.slds-m-bottom--small 
      | Install through 
      code npm
      | :
    +prism(install)
      
    p.slds-m-vertical--small 
      | If you use&nbsp;
      strong SystemJS
      | &nbsp;to load your files, you may want to use our bundle file through&nbsp;
      a(href="https://unpkg.com/") unpkg
      | .
    +prism(bundle)

  .slds-p-vertical--large
    .slds-text-heading--large.slds-m-bottom--large Reading the documentation
    p 
      | Each component has API documentation, examples, and a working demo. They can be found&nbsp; 
      a([routerLink]="['/components']") here
      | .

  .slds-p-vertical--large
    .slds-text-heading--large.slds-m-bottom--large Usage
    p 
      | Once installed you need to import our main module into your application module by calling&nbsp;
      code NglModule.forRoot()
      | . You should end up with code similar to this:
    +prism(usageApp)
      
  .slds-p-vertical--large
    .slds-text-heading--large.slds-m-bottom--large Configuration
    p 
      | Optionally, you can pass an object to the&nbsp;
      code forRoot
      | &nbsp;method, to configure&nbsp;
      code ng-lightning
      | &nbsp;during the initialization of the application, in order to provide your own default values.
      | For example:
    +prism(config)
    p.slds-m-top--small
      | Currently available options are:
    ul.slds-list--dotted
      li 
        b svgPath
        | : path to SVG sprites. Default is&nbsp;
        code assets/icons
        
    p.slds-m-top--large
      | If you want to change some config properties during runtime, you can easily achieve it by utilizing the&nbsp;
      code update
      | &nbsp;method like this:
    +prism(configRun)
